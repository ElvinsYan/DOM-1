{"version":3,"sources":["main.js"],"names":["div1","dom","create","console","log","div2","after","div3","before","div4","append","appendTest","div5","wrap","nodes","empty","window","attr","attribute","title","text","textTest","style","styleTest1","border","color","styleTest2","class","add","classTest","remove","contains","div","find","divList","each","n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,OAAOC,IAAIC,MAAJ,CAAW,8BAAX,CAAb;AACAC,QAAQC,GAAR,CAAYJ,IAAZ;;AAEA,IAAMK,OAAOJ,IAAIC,MAAJ,CAAW,iBAAX,CAAb;AACAD,IAAIK,KAAJ,CAAUA,KAAV,EAAiBD,IAAjB;;AAEA,IAAME,OAAON,IAAIC,MAAJ,CAAW,iBAAX,CAAb;AACAD,IAAIO,MAAJ,CAAWA,MAAX,EAAmBD,IAAnB;;AAEA,IAAME,OAAOR,IAAIC,MAAJ,CAAW,mBAAX,CAAb;AACAD,IAAIS,MAAJ,CAAWC,UAAX,EAAuBF,IAAvB;;AAEA,IAAMG,OAAOX,IAAIC,MAAJ,CAAW,yBAAX,CAAb;AACAD,IAAIY,IAAJ,CAASA,IAAT,EAAeD,IAAf;;AAEA,IAAME,QAAQb,IAAIc,KAAJ,CAAUC,OAAOD,KAAjB,CAAd;AACAZ,QAAQC,GAAR,CAAYU,KAAZ;;AAEAb,IAAIgB,IAAJ,CAASC,SAAT,EAAoB,OAApB,EAA6B,iBAA7B;AACA,IAAMC,QAAQlB,IAAIgB,IAAJ,CAASC,SAAT,EAAoB,OAApB,CAAd;AACAf,QAAQC,GAAR,aAAsBe,KAAtB;;AAEAlB,IAAImB,IAAJ,CAASC,QAAT;AACAlB,QAAQC,GAAR,CAAYH,IAAImB,IAAJ,CAASC,QAAT,CAAZ;;AAEApB,IAAIqB,KAAJ,CAAUC,UAAV,EAAsB,EAAEC,QAAQ,gBAAV,EAA4BC,OAAO,OAAnC,EAAtB;AACAtB,QAAQC,GAAR,cAAuBH,IAAIqB,KAAJ,CAAUC,UAAV,EAAsB,QAAtB,CAAvB;AACAtB,IAAIqB,KAAJ,CAAUI,UAAV,EAAsB,QAAtB,EAAgC,iBAAhC;;AAEAzB,IAAI0B,KAAJ,CAAUC,GAAV,CAAcC,SAAd,EAAyB,MAAzB;AACA5B,IAAI0B,KAAJ,CAAUC,GAAV,CAAcC,SAAd,EAAyB,OAAzB;AACA5B,IAAI0B,KAAJ,CAAUG,MAAV,CAAiBD,SAAjB,EAA4B,MAA5B;AACA1B,QAAQC,GAAR,CAAYH,IAAI0B,KAAJ,CAAUI,QAAV,CAAmBF,SAAnB,EAA8B,MAA9B,CAAZ;;AAEA,IAAMG,MAAM/B,IAAIgC,IAAJ,CAAS,aAAT,EAAwB,CAAxB,CAAZ;AACAhC,IAAIqB,KAAJ,CAAUU,GAAV,EAAe,OAAf,EAAwB,MAAxB;;AAEA,IAAME,UAAUjC,IAAIgC,IAAJ,CAAS,MAAT,CAAhB;AACAhC,IAAIkC,IAAJ,CAASD,OAAT,EAAkB,UAACE,CAAD;AAAA,SAAOjC,QAAQC,GAAR,CAAYgC,CAAZ,CAAP;AAAA,CAAlB","file":"main.382ae612.map","sourceRoot":"..\\src","sourcesContent":["const div1 = dom.create(\"<div><span>div1</span></div>\");\r\nconsole.log(div1);\r\n\r\nconst div2 = dom.create(\"<div>div2</div>\");\r\ndom.after(after, div2);\r\n\r\nconst div3 = dom.create(\"<div>div3</div>\");\r\ndom.before(before, div3);\r\n\r\nconst div4 = dom.create(\"<div>append</div>\");\r\ndom.append(appendTest, div4);\r\n\r\nconst div5 = dom.create(\"<div id='parent'></div>\");\r\ndom.wrap(wrap, div5);\r\n\r\nconst nodes = dom.empty(window.empty);\r\nconsole.log(nodes);\r\n\r\ndom.attr(attribute, \"title\", \"Hi, I am Elvins\");\r\nconst title = dom.attr(attribute, \"title\");\r\nconsole.log(`title: ${title}`);\r\n\r\ndom.text(textTest, `你好，这是新的内容`);\r\nconsole.log(dom.text(textTest));\r\n\r\ndom.style(styleTest1, { border: \"1px solid blue\", color: \"green\" });\r\nconsole.log(`border: ${dom.style(styleTest1, \"border\")}`);\r\ndom.style(styleTest2, \"border\", \"1px solid black\");\r\n\r\ndom.class.add(classTest, \"blue\");\r\ndom.class.add(classTest, \"green\");\r\ndom.class.remove(classTest, \"blue\");\r\nconsole.log(dom.class.contains(classTest, \"blue\"));\r\n\r\nconst div = dom.find(\"#test1>.red\")[1];\r\ndom.style(div, \"color\", \"blue\");\r\n\r\nconst divList = dom.find(\".red\");\r\ndom.each(divList, (n) => console.log(n));\r\n"]}